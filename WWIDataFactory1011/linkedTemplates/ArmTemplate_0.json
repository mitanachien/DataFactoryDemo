{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "WWIDataFactory1011"
		},
		"WWI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWI'"
		},
		"WWI_DW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWI_DW'"
		},
		"ods_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ods'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/WWI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('WWI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "WWIToOds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "BillToCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuyingGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PrimaryContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AlternateContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditLimit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AccountOpenedDate",
						"type": "date"
					},
					{
						"name": "StandardDiscountPercentage",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "IsStatementSent",
						"type": "bit"
					},
					{
						"name": "IsOnCreditHold",
						"type": "bit"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryRun",
						"type": "nvarchar"
					},
					{
						"name": "RunPosition",
						"type": "nvarchar"
					},
					{
						"name": "WebsiteURL",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryLocation",
						"type": "geography"
					},
					{
						"name": "PostalAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "PostalPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('WWI_DW_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ods')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ods_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimensionCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationToDimension"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Customer ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Bill To Customer",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Buying Group",
						"type": "nvarchar"
					},
					{
						"name": "Primary Contact",
						"type": "nvarchar"
					},
					{
						"name": "Postal Code",
						"type": "nvarchar"
					},
					{
						"name": "Valid From",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Valid To",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Lineage Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer Surrogate Key",
						"type": "nchar"
					},
					{
						"name": "iscurrent",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "Dimension",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationToDimension"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Staging Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Customer ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Bill To Customer",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Buying Group",
						"type": "nvarchar"
					},
					{
						"name": "Primary Contact",
						"type": "nvarchar"
					},
					{
						"name": "Postal Code",
						"type": "nvarchar"
					},
					{
						"name": "Valid From",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Valid To",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Customer Surrogate Key",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "Customer_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationStockItem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationToDimension"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Stock Item Staging Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Stock Item ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Item",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "Selling Package",
						"type": "nvarchar"
					},
					{
						"name": "Buying Package",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Lead Time Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity Per Outer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Is Chiller Stock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "Tax Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Recommended Retail Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Typical Weight Per Unit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "Valid From",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Valid To",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "StockItem Surrogate Key",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "StockItem_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI_DW_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationCustomer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Integration",
					"table": "Customer_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI_DW_StockItem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWI_DW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationStockItem"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Stock Item Staging Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Stock Item ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Item",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "Selling Package",
						"type": "nvarchar"
					},
					{
						"name": "Buying Package",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Lead Time Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity Per Outer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Is Chiller Stock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "Tax Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Recommended Retail Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Typical Weight Per Unit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "Valid From",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Valid To",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "StockItem Surrogate Key",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "StockItem_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWI_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ods')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "WWIToOds"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsAppPeople')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationCustomer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullName",
						"type": "nvarchar"
					},
					{
						"name": "PreferredName",
						"type": "nvarchar"
					},
					{
						"name": "SearchName",
						"type": "nvarchar"
					},
					{
						"name": "IsPermittedToLogon",
						"type": "bit"
					},
					{
						"name": "LogonName",
						"type": "nvarchar"
					},
					{
						"name": "IsExternalLogonProvider",
						"type": "bit"
					},
					{
						"name": "HashedPassword",
						"type": "varbinary"
					},
					{
						"name": "IsSystemUser",
						"type": "bit"
					},
					{
						"name": "IsEmployee",
						"type": "bit"
					},
					{
						"name": "IsSalesperson",
						"type": "bit"
					},
					{
						"name": "UserPreferences",
						"type": "nvarchar"
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "CustomFields",
						"type": "nvarchar"
					},
					{
						"name": "OtherLanguages",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Application",
					"table": "People"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsSalesBuyingGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationCustomer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "BuyingGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuyingGroupName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "BuyingGroups"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsSalesCustomerCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationCustomer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "CustomerCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsSalesCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationCustomer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "BillToCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuyingGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PrimaryContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AlternateContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditLimit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AccountOpenedDate",
						"type": "date"
					},
					{
						"name": "StandardDiscountPercentage",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "IsStatementSent",
						"type": "bit"
					},
					{
						"name": "IsOnCreditHold",
						"type": "bit"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryRun",
						"type": "nvarchar"
					},
					{
						"name": "RunPosition",
						"type": "nvarchar"
					},
					{
						"name": "WebsiteURL",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryLocation",
						"type": "geography"
					},
					{
						"name": "PostalAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "PostalPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "sales",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsWarehouseColors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationStockItem"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "ColorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ColorName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Warehouse",
					"table": "Colors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsWarehousePackageTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationStockItem"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PackageTypeName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Warehouse",
					"table": "PackageTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odsWarehouseStockItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ods",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "odsToIntegrationStockItem"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "uniqueidentifier"
					},
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ColorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OuterPackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "LeadTimeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityPerOuter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsChillerStock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RecommendedRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TypicalWeightPerUnit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "MarketingComments",
						"type": "nvarchar"
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "CustomFields",
						"type": "nvarchar"
					},
					{
						"name": "Tags",
						"type": "nvarchar"
					},
					{
						"name": "SearchDetails",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Warehouse",
					"table": "StockItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWIToOds')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT newid() AS SurrogateKey, * FROM @{item().MyTableWithSchema}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "DROP TABLE IF EXISTS @{item().MyTableWithSchema};\n",
												"type": "Expression"
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "WWI",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ods",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().MyTable",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().MySchema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT '[' + TABLE_SCHEMA + '].[' + TABLE_NAME + ']' As MyTableWithSchema\n, TABLE_SCHEMA As MySchema,\nTABLE_NAME As MyTable\nFROM [WideWorldImporters-Standard].information_schema.tables\nWHERE table_type = 'BASE TABLE';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WWI",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "WWIToOds"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-11T19:54:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WWI')]",
				"[concat(variables('factoryId'), '/datasets/ods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimensionCustomer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationToDimension"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IntegrationCustomer",
								"type": "DatasetReference"
							},
							"name": "Integration"
						},
						{
							"dataset": {
								"referenceName": "DimensionCustomer",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimensionCustomer",
								"type": "DatasetReference"
							},
							"name": "SinkInactive"
						},
						{
							"dataset": {
								"referenceName": "DimensionCustomer",
								"type": "DatasetReference"
							},
							"name": "sinkUpdate"
						},
						{
							"dataset": {
								"referenceName": "DimensionCustomer",
								"type": "DatasetReference"
							},
							"name": "sinkNew"
						}
					],
					"transformations": [
						{
							"name": "LookupIDs"
						},
						{
							"name": "ConditionSplit1"
						},
						{
							"name": "SetAttrsForNew"
						},
						{
							"name": "checkForChanges"
						},
						{
							"name": "SetAttrUpdate"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "SetAttrInactive"
						}
					],
					"script": "source(output(\n\t\t{Customer Staging Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Customer Surrogate Key} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Integration\nsource(output(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nIntegration, DimCustomer lookup(Integration@{WWI Customer ID} == DimCustomer@{WWI Customer ID},\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupIDs\nSelectColumns split(isNull(iscurrent),\n\tdisjoint: true) ~> ConditionSplit1@(NewRow, CheckForUpdates)\nConditionSplit1@NewRow derive(iscurrent = true(),\n\t\t{Valid From} = currentTimestamp(),\n\t\t{Lineage Key} = 2) ~> SetAttrsForNew\nConditionSplit1@CheckForUpdates, DimCustomer exists(ConditionSplit1@CheckForUpdates@{WWI Customer ID} == DimCustomer@{WWI Customer ID} &&\r\n\r\n(\r\n    ConditionSplit1@CheckForUpdates@Customer != DimCustomer@Customer ||\r\n    ConditionSplit1@CheckForUpdates@{Bill To Customer} != DimCustomer@{Bill To Customer} ||\r\n    ConditionSplit1@CheckForUpdates@Category != DimCustomer@Category ||\r\n    ConditionSplit1@CheckForUpdates@{Buying Group} != DimCustomer@{Buying Group} ||\r\n    ConditionSplit1@CheckForUpdates@{Primary Contact} != DimCustomer@{Primary Contact} ||\r\n    ConditionSplit1@CheckForUpdates@{Postal Code} != DimCustomer@{Postal Code} ||\r\n    {Int Valid From} != {Valid From} ||\r\n    {Int Valid To} != {Valid To}\r\n),\n\tnegate:false,\n\tbroadcast: 'left')~> checkForChanges\ncheckForChanges derive(iscurrent = true(),\n\t\t{New Valid From} = currentTimestamp()) ~> SetAttrUpdate\nLookupIDs select(mapColumn(\n\t\t{WWI Customer ID} = Integration@{WWI Customer ID},\n\t\tCustomer = Integration@Customer,\n\t\t{Bill To Customer} = Integration@{Bill To Customer},\n\t\tCategory = Integration@Category,\n\t\t{Buying Group} = Integration@{Buying Group},\n\t\t{Primary Contact} = Integration@{Primary Contact},\n\t\t{Postal Code} = Integration@{Postal Code},\n\t\t{Int Valid From} = Integration@{Valid From},\n\t\t{Int Valid To} = Integration@{Valid To},\n\t\t{Customer Surrogate Key} = Integration@{Customer Surrogate Key},\n\t\t{Dim Valid From} = DimCustomer@{Valid From},\n\t\t{Dim Valid To} = DimCustomer@{Valid To},\n\t\t{Lineage Key},\n\t\tiscurrent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSetAttrInactive alterRow(updateIf(iscurrent==true())) ~> AlterRow1\ncheckForChanges derive({New Valid To} = currentTimestamp()) ~> SetAttrInactive\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['WWI Customer ID','iscurrent'],\n\tformat: 'table',\n\tpreSQLs:['UPDATE Dimension.Customer\\nSET [Valid To] = GETDATE()\\nWHERE iscurrent = 1;'],\n\tpostSQLs:['UPDATE Dimension.Customer\\nSET iscurrent = 0;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID},\n\t\tCustomer,\n\t\t{Bill To Customer},\n\t\tCategory,\n\t\t{Buying Group},\n\t\t{Primary Contact},\n\t\t{Postal Code},\n\t\t{Valid From} = {Dim Valid From},\n\t\t{Valid To} = {New Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> SinkInactive\nSetAttrUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID},\n\t\tCustomer,\n\t\t{Bill To Customer},\n\t\tCategory,\n\t\t{Buying Group},\n\t\t{Primary Contact},\n\t\t{Postal Code},\n\t\t{Valid From} = {New Valid From},\n\t\t{Valid To} = {Int Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> sinkUpdate\nSetAttrsForNew sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID},\n\t\tCustomer,\n\t\t{Bill To Customer},\n\t\tCategory,\n\t\t{Buying Group},\n\t\t{Primary Contact},\n\t\t{Postal Code},\n\t\t{Valid From},\n\t\t{Valid To} = {Int Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> sinkNew"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IntegrationCustomer')]",
				"[concat(variables('factoryId'), '/datasets/DimensionCustomer')]"
			]
		}
	]
}