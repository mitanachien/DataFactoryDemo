{
	"name": "DimensionCustomer",
	"properties": {
		"folder": {
			"name": "IntegrationToDimension"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "IntegrationCustomer",
						"type": "DatasetReference"
					},
					"name": "Integration"
				},
				{
					"dataset": {
						"referenceName": "DimensionCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimensionCustomer",
						"type": "DatasetReference"
					},
					"name": "SinkUpdate"
				},
				{
					"dataset": {
						"referenceName": "DimensionCustomer",
						"type": "DatasetReference"
					},
					"name": "sinkInactive"
				},
				{
					"dataset": {
						"referenceName": "DimensionCustomer",
						"type": "DatasetReference"
					},
					"name": "sinkNew"
				}
			],
			"transformations": [
				{
					"name": "LookupIDs"
				},
				{
					"name": "ConditionSplit1"
				},
				{
					"name": "SetAttrsForNew"
				},
				{
					"name": "SetAttrUpdate"
				},
				{
					"name": "checkForChanges"
				},
				{
					"name": "SetAttrInactive"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\t{Customer Staging Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Customer Surrogate Key} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Integration\nsource(output(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nIntegration, DimCustomer lookup(Integration@{WWI Customer ID} == DimCustomer@{WWI Customer ID},\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupIDs\nLookupIDs split(isNull(iscurrent),\n\tdisjoint: false) ~> ConditionSplit1@(NewRow, CheckForUpdates)\nConditionSplit1@NewRow derive(iscurrent = 1,\n\t\t{Valid From} = currentTimestamp(),\n\t\t{Lineage Key} = 2) ~> SetAttrsForNew\ncheckForChanges derive(iscurrent = 1,\n\t\t{Valid From} = currentTimestamp()) ~> SetAttrUpdate\nConditionSplit1@CheckForUpdates, DimCustomer exists(ConditionSplit1@CheckForUpdates@{WWI Customer ID} == DimCustomer@{WWI Customer ID} &&\r\n(\r\n    ConditionSplit1@CheckForUpdates@Customer != DimCustomer@Customer ||\r\n    ConditionSplit1@CheckForUpdates@{Bill To Customer} != DimCustomer@{Bill To Customer} ||\r\n    ConditionSplit1@CheckForUpdates@Category != DimCustomer@Category ||\r\n    ConditionSplit1@CheckForUpdates@{Buying Group} != DimCustomer@{Buying Group} ||\r\n    ConditionSplit1@CheckForUpdates@{Primary Contact} != DimCustomer@{Primary Contact} ||\r\n    ConditionSplit1@CheckForUpdates@{Postal Code} != DimCustomer@{Postal Code} ||\r\n    ConditionSplit1@CheckForUpdates@{Valid From} != DimCustomer@{Valid From}\r\n),\n\tnegate:false,\n\tbroadcast: 'left')~> checkForChanges\ncheckForChanges derive(iscurrent = 0,\n\t\t{Valid To} = currentTimestamp()) ~> SetAttrInactive\nSetAttrInactive alterRow(updateIf(true())) ~> AlterRow1\nSetAttrUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID} = ConditionSplit1@CheckForUpdates@{WWI Customer ID},\n\t\tCustomer = ConditionSplit1@CheckForUpdates@Customer,\n\t\t{Bill To Customer} = ConditionSplit1@CheckForUpdates@{Bill To Customer},\n\t\tCategory = ConditionSplit1@CheckForUpdates@Category,\n\t\t{Buying Group} = ConditionSplit1@CheckForUpdates@{Buying Group},\n\t\t{Primary Contact} = ConditionSplit1@CheckForUpdates@{Primary Contact},\n\t\t{Postal Code} = ConditionSplit1@CheckForUpdates@{Postal Code},\n\t\t{Valid From},\n\t\t{Valid To} = ConditionSplit1@CheckForUpdates@{Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key} = ConditionSplit1@CheckForUpdates@{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> SinkUpdate\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['iscurrent','Valid To'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID} = ConditionSplit1@CheckForUpdates@{WWI Customer ID},\n\t\tCustomer = ConditionSplit1@CheckForUpdates@Customer,\n\t\t{Bill To Customer} = ConditionSplit1@CheckForUpdates@{Bill To Customer},\n\t\tCategory = ConditionSplit1@CheckForUpdates@Category,\n\t\t{Buying Group} = ConditionSplit1@CheckForUpdates@{Buying Group},\n\t\t{Primary Contact} = ConditionSplit1@CheckForUpdates@{Primary Contact},\n\t\t{Postal Code} = ConditionSplit1@CheckForUpdates@{Postal Code},\n\t\t{Valid From} = ConditionSplit1@CheckForUpdates@{Valid From},\n\t\t{Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key} = ConditionSplit1@CheckForUpdates@{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> sinkInactive\nSetAttrsForNew sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Customer Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp,\n\t\t{Lineage Key} as integer,\n\t\t{Customer Surrogate Key} as string,\n\t\tiscurrent as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{WWI Customer ID} = ConditionSplit1@NewRow@{WWI Customer ID},\n\t\tCustomer = ConditionSplit1@NewRow@Customer,\n\t\t{Bill To Customer} = ConditionSplit1@NewRow@{Bill To Customer},\n\t\tCategory = ConditionSplit1@NewRow@Category,\n\t\t{Buying Group} = ConditionSplit1@NewRow@{Buying Group},\n\t\t{Primary Contact} = ConditionSplit1@NewRow@{Primary Contact},\n\t\t{Postal Code} = ConditionSplit1@NewRow@{Postal Code},\n\t\t{Valid From},\n\t\t{Valid To} = ConditionSplit1@NewRow@{Valid To},\n\t\t{Lineage Key},\n\t\t{Customer Surrogate Key} = ConditionSplit1@NewRow@{Customer Surrogate Key},\n\t\tiscurrent\n\t)) ~> sinkNew"
		}
	}
}